#! /bin/sh
#
#   Copyright (c) 2017 Nat! - Mulle kybernetiK
#   All rights reserved.
#
#   Redistribution and use in source and binary forms, with or without
#   modification, are permitted provided that the following conditions are met:
#
#   Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
#   Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
#   Neither the name of Mulle kybernetiK nor the names of its contributors
#   may be used to endorse or promote products derived from this software
#   without specific prior written permission.
#
#   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#   POSSIBILITY OF SUCH DAMAGE.
#
[ "${TRACE}" = 'YES' ] && set -x && : "$0" "$@"


MULLE_EXECUTABLE_VERSION='0.0.2'

##########################################################################
###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###
###########################################################################
# #
# # PRELUDE - Standard startup code for loading mulle-bashfunctions
# #
###

#
# Figure out MULLE_BASHFUNCTIONS_LIBEXEC_DIR on this machine if needed.
#
if [ -z "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}" ]
then
   MULLE_BASHFUNCTIONS_LIBEXEC_DIR="`mulle-bashfunctions libexec-dir`" || exit 1
   export MULLE_BASHFUNCTIONS_LIBEXEC_DIR
fi

#
# The booter reruns the executable either with bash or zsh, whatever the
# system provides. On the second run --no-auto-shell will be set first.
#
if [ "$1" != --no-auto-shell ]
then
   . "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-boot.sh" || exit 1
else
   shift    # get rid of --no-auto-shell
fi


#
# Include mulle-bashfunctions.sh         : default functions
#         mulle-bashfunctions-none.sh    : almost no functions
#         mulle-bashfunctions-minimal.sh : few functions for basic scripts
#         mulle-bashfunctions-all.sh     : everything, even obscure functions
#
# Do this first to get aliases
#
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashfunctions.sh" || exit 1

###
# # Now we are in bash or zsh with mulle-bashfunctions loaded
# #
###########################################################################
###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###
###########################################################################

MULLE_EXECUTABLE="${BASH_SOURCE[0]:-${(%):-%x}}"

#
# removes destination directory if it exists
#
main()
{
   local arguments
   local cmd='mv'

   if [ "$1" = "-c" ]
   then
      cmd='cp -a'
      shift
   fi

   if [ $# -lt 2 ]
   then
      fail "usage: mulle-dispense-mv-force [-c] <source> <destination>
                   Removes destination directory if it exists
                   Use -c to copy"
   fi

   while [ $# -gt 2 ]
   do
      r_concat "${arguments}" "'$1'"
      arguments="${RVAL}"
      shift
   done

   local src
   local dst

   src="$1"
   dst="$2"

   [ -z "${src}" ] && fail "empty source is not allowed"
   [ -z "${dst}" ] && fail "empty destination is not allowed"

   local name
   local erase

   case "${dst}" in
      */)
         r_basename "${src}"
         name="${RVAL}"
         erase="${dst}/${name}"
      ;;

      *)
         erase="${dst}"
      ;;
   esac

   rmdir_safer "${erase}" || exit 1
   eval_exekutor "${cmd} -f ${arguments} '${src}' '${dst}'"
}


main "$@"

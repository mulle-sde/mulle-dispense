#! /usr/bin/env mulle-bash
# shellcheck shell=bash
#
# shellcheck shell=bash
# shellcheck disable=SC2236
# shellcheck disable=SC2166
# shellcheck disable=SC2006
# shellcheck disable=SC1090
# shellcheck disable=SC1091
#
#   Copyright (c) 2015-2017 Nat! - Mulle kybernetiK
#   All rights reserved.
#
#   Redistribution and use in source and binary forms, with or without
#   modification, are permitted provided that the following conditions are met:
#
#   Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
#   Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
#   Neither the name of Mulle kybernetiK nor the names of its contributors
#   may be used to endorse or promote products derived from this software
#   without specific prior written permission.
#
#   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#   POSSIBILITY OF SUCH DAMAGE.
#
[ "${TRACE:-}" = 'YES' -o "${MULLE_DISPENSE_TRACE:-}" = 'YES' ] && set -x && : "$0" "$@"


MULLE_EXECUTABLE_VERSION=3.1.0

#
# Determine location of own libexec directory. Which is `src` in development
# and ../libexec when deployed. MULLE_EXECUTABLE needs to be defined for this.
#

if ! [ ${MULLE_DISPENSE_LIBEXEC_DIR+x} ]
then
   r_get_libexec_dir "${MULLE_EXECUTABLE}" "mulle-dispense" "mulle-dispense-copy.sh"
   MULLE_DISPENSE_LIBEXEC_DIR="${RVAL}"
fi

set +u

#
# This is the dispense::main user interface to mulle-dispense
# sorta like git
#

dispense::print_commands()
{
   local  show_all="${1:-NO}"

   SHOWN_COMMANDS="\
   dispense      : copy files [default]
   version       : print ${MULLE_USAGE_NAME} version"

   HIDDEN_COMMANDS="\
   libexec-dir   : print path to ${MULLE_USAGE_NAME} libexec
   uname         : ${MULLE_USAGE_NAME}'s simplified uname(1)"

   printf "%s\n" "${SHOWN_COMMANDS}"

   if [ "${show_all}" != 'NO' ]
   then
      printf "%s\n" "${HIDDEN_COMMANDS}"
   fi
}


dispense::print_flags()
{
   cat <<EOF
   -f            : force operation
EOF

   options_technical_flags_usage "         : "
}


dispense::usage()
{
   local verbose="${1:-NO}"

   cat <<EOF
Usage:
   ${MULLE_USAGE_NAME} [flags] [command] [options] <srcdir> <dstdir>

   Distribute build product files in a uniform fashion. See the "copy" help
   for more information.

Hint:
   Use \`mulle-sde dependency <name> mark no-inplace\` to activate the dispense
   step of mulle-sde. Use the mark "no-rootheader" to lower header files into
   a subdirectory. Use the mark "only-liftheaders" to lift headers up to root
   level of the include.

Flags:
EOF

   dispense::print_flags | LC_ALL=C sort

   cat <<EOF

Commands:
EOF

   dispense::print_commands "${verbose}"

   if [ "${verbose}" = 'NO' ]
   then
      cat <<EOF
      (use mulle-dispense -v help to show more commands)
EOF
   fi

   cat <<EOF

Options are command specific. Use ${MULLE_USAGE_NAME} <command> -h for help.
EOF

   exit 1
}


dispense::main()
{
   local MULLE_FLAG_ANSWER="ASK"
   local MULLE_FLAG_MAGNUM_FORCE='NO'
   local MULLE_FLAG_IGNORE_GRAVEYARD='NO'

   # technical flags
   local MULLE_TRACE
   local MULLE_FLAG_EXEKUTOR_DRY_RUN='NO'
   local MULLE_FLAG_LOG_LOCAL='NO'
   local MULLE_FLAG_LOG_DEBUG='NO'
   local MULLE_FLAG_LOG_EXEKUTOR='NO'
   local MULLE_FLAG_LOG_FLUFF='NO'
   local MULLE_FLAG_LOG_SCRIPTS='NO'
   local MULLE_FLAG_LOG_SETTINGS='NO'
   local MULLE_FLAG_LOG_VERBOSE='NO'
   local MULLE_FLAG_LOG_MERGE='NO'
   local MULLE_TRACE_POSTPONE='NO'

   local FLAG_LS='NO'

   #
   # simple option handling
   #
   local argument

   while [ "$#" -ne 0 ]
   do
      argument="$1"

      if options_technical_flags "${argument}"
      then
         shift
         continue
      fi

      case "${argument}" in
         -f|--force)
            MULLE_FLAG_MAGNUM_FORCE='YES'
         ;;

         -h*|--help|help)
            dispense::usage "${MULLE_TRACE}"
         ;;

         --version)
            printf "%s\n" "${MULLE_EXECUTABLE_VERSION}"
            exit 0
         ;;

         -ls)
            FLAG_LS='YES'
         ;;

         -*)
            log_error "${MULLE_EXECUTABLE_FAIL_PREFIX}: Unknown option \"${argument}\""
            dispense::usage "${MULLE_TRACE}"
         ;;

         *)
            break
         ;;
      esac

      shift
   done

   options_setup_trace "${MULLE_TRACE}" && set -x

   local cmd

   cmd="${argument:-dispense}"

   # it argument looks like a or an option path, make it a dispense
   case "${argument}" in
      *"-"*|"*/"*|*"."*)
         argument="dispense"
      ;;

      *)
         [ "$#" -ne 0 ] && shift
      ;;
   esac

   case "${cmd}" in
      copy|dispense)
         # shellcheck source=src/mulle-dispense-build.sh
         . "${MULLE_DISPENSE_LIBEXEC_DIR}/mulle-dispense-copy.sh" || exit 1

         dispense::copy::main "$@"
      ;;

      libexec-dir|library-path)
         printf "%s\n" "${MULLE_DISPENSE_LIBEXEC_DIR}"
      ;;

      uname)
         printf "%s\n" "${MULLE_UNAME}"
      ;;

      version)
         printf "%s\n" "${MULLE_EXECUTABLE_VERSION}"
         return 0
      ;;

      *)
         log_error "${MULLE_EXECUTABLE_FAIL_PREFIX}: Unknown command \"${cmd}\""
         dispense::usage "${MULLE_TRACE}"
      ;;
   esac
}

call_with_flags "dispense::main" "${MULLE_DISPENSE_FLAGS}" "$@"
